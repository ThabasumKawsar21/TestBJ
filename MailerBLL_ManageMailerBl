//-----------------------------------------------------------------------
// <copyright file="ManageMailerBl.cs" company="CTS">
//     Copyright (c) . All rights reserved.
// </copyright>
//-----------------------------------------------------------------------
namespace MailerBLL
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Configuration;
    using System.Data;
    using System.Data.SqlClient;
    using System.Diagnostics.CodeAnalysis;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Security;
    using System.Text;
    using System.Threading.Tasks;
    using System.Web;
    using System.Web.Hosting;
    using BusinessManager;
    using ExceptionHandling;
    using MailerDAL;
    using MailerModel;
    using Microsoft.Exchange.WebServices.Data;
    using System.Globalization;

    /// <summary>
    /// Manage Mailer Business
    /// </summary>
    public class ManageMailerBl
    {
        #region Declarations
        /// <summary>
        /// Manage Mailer Dal Object
        /// </summary>
        private ManageMailerDal manageMailerDal = new ManageMailerDal();

        /// <summary>
        /// Mail Notification object
        /// </summary>
        private MailNotification mailNotification = new MailNotification();
        #endregion

        /// <summary>
        ///  Gets SendLink by MailSubjectLine
        /// </summary>
        public static string SendLinkbyMailSubjectLine
        {
            get
            {
                return "Cognizant Visitor Management System";
            }
        }

        /// <summary>
        /// Gets Token For CheckInToVisitor MailTemplate
        /// </summary>
        public static string TokenForCheckInToVisitorMailTemplate
        {
            get
            {
                return "tknAssociateName|tknDateofsubmission|tknCheckIn|tknlink";
            }
        }

        /// <summary>
        /// Gets CheckIn to Visitor Template
        /// </summary>
        public static string CheckINtoVisitorTemplate
        {
            get
            {
                return "CheckInVisitor";
            }
        }

        /// <summary>
        ///  Gets CheckIN toVisitor Without LinkTemplate
        /// </summary>
        public static string CheckINtoVisitorWithoutLinkTemplate
        {
            get
            {
                return "CheckInVisitorWithoutLink";
            }
        }

        /// <summary>
        /// Encrypt data
        /// </summary>
        /// <param name="encryptString">encrypt string</param>
        /// <returns>encrypted string</returns>
        public static string Encrypt(string encryptString)
        {
            string codeValue = ConfigurationManager.AppSettings["CodeValue"].ToString();
            var securePassword = new SecureString();
            foreach (var c in codeValue)
            {
                securePassword.AppendChar(c);
            }

            string codeKey = Convert.ToString(Convert.ToBase64String(System.Text.Encoding.Unicode.GetBytes(new NetworkCredential(string.Empty, securePassword).Password)));
            string textToBeEncrypted = string.Concat(codeKey, "*", encryptString, "*");
            byte[] encData_byte = new byte[textToBeEncrypted.Length];
            encData_byte = System.Text.Encoding.UTF32.GetBytes(textToBeEncrypted);
            string encodedData = Convert.ToBase64String(encData_byte);
            return encodedData;
        }

        /// <summary>
        /// Implements mailing functionality to send mail to outside Cognizant domain.
        /// </summary>
        /// <summary>
        /// Send mail to outside Cognizant domain.
        /// </summary>
        /// <param name="mailSubject">mail subject</param>
        /// <param name="mailBody">Mail Body</param>
        /// <param name="mailTo">Mail To</param>
        /// <returns>has send mail</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1804:RemoveUnusedLocals", MessageId = "exception", Justification = "Might be required")]
        public static bool SendEmailnew(
            string mailSubject, string mailBody, string mailTo)
        {
            try
            {
                bool isSend = false;
                Exchange2010Service server = new Exchange2010Service();
                server.Sendtopersonalmail(mailSubject, mailBody, mailTo);


                isSend = true;
                return isSend;
            }
            catch (Exception ex)
            {
                /////ExceptionLogger.OneC_ExceptionLogger(ex, HttpContext.Current.Handler);
                ManageMailerDal obj = new ManageMailerDal();
                obj.LogBatchHistory(("Batch error SendEmailnew " + ex).Substring(0, 200), "NULL");
                throw ex;
            }
        }
        #region Methods
        /// <summary>
        /// Get Client Visit Requests 
        /// </summary>
        public void GetClientVisitRequests()
        {
            ManageMailerDal maildal = new ManageMailerDal();
            List<ClientRequests> lstRequests = this.manageMailerDal.GetClientVisitRequests();
            List<String> lstReq = new List<String>();
            lstReq.Add(lstRequests.ToString());
            foreach (var item in lstRequests)
            {
                this.mailNotification.SendMailToHost(item.HostID, item.HostName, item.VisitDate, item.RequestID.ToString(), item.LocationName, item.LocationCity, item.ClientFirstName, item.ClientLastName);
                //maildal.UpdateMailerFlag(item.RequestID.ToString(), "Clients");
            }
            maildal.UpdateMailerFlag(lstReq, lstReq[0].ToString());
        }
        #endregion

        /// <summary>
        /// Fetch details to send mail
        /// </summary>
        public void SendRemainderMailsToCollectPass()
        {
            try
            {
                ManageMailerDal maildal = new ManageMailerDal();
                DataTable remaindermaildetails = new DataTable();
                string hostid = string.Empty;
                string hostname = string.Empty;
                string status = string.Empty;
                ////string subject = string.Empty;
                remaindermaildetails = maildal.GetRemainderMailDetails();
                if (remaindermaildetails.Rows.Count > 0)
                {
                    for (int i = 0; i < remaindermaildetails.Rows.Count; i++)
                    {
                        if (remaindermaildetails.Rows[i]["HostID"].ToString().Contains('('))
                        {
                            string[] host = remaindermaildetails.Rows[i]["HostID"].ToString().Split('(');
                            hostid = host[1].Substring(0, host[1].Length - 1);
                            hostname = host[0];
                        }

                        if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "12" && (remaindermaildetails.Rows[i]["RemainderPassCollect"].ToString() == null || remaindermaildetails.Rows[i]["RemainderPassCollect"].ToString() == string.Empty))
                        {
                            ////subject = "First Remainder to Collect the Visior Passes";
                            status = this.mailNotification.SendRemainderMailToCollectPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString());
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderCollectFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 1);
                            }
                        }
                        else if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "24" && remaindermaildetails.Rows[i]["RemainderPassCollect"].ToString() == "1")
                        {
                            status = this.mailNotification.SendRemainderMailToCollectPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString());
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderCollectFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 2);
                            }
                        }
                        else if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "36" && remaindermaildetails.Rows[i]["RemainderPassCollect"].ToString() == "2")
                        {
                            status = this.mailNotification.SendRemainderMailToCollectPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString());
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderCollectFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 3);
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                ManageMailerDal obj = new ManageMailerDal();
                obj.LogBatchHistory(("Batch error SendRemainderMailsToCollectPass " + ex).Substring(0, 200), "NULL");
                throw ex;
            }
        }

        /// <summary>
        /// Fetch details to send mail
        /// </summary>
        public void SendRemainderMailsToReturnPass()
        {
            try
            {
                ManageMailerDal maildal = new ManageMailerDal();
                DataTable remaindermaildetails = new DataTable();
                string hostid = string.Empty;
                string hostname = string.Empty;
                string status = string.Empty;
                ////string subject = string.Empty;
                remaindermaildetails = maildal.GetPassReturnRemainderMailDetails();
                if (remaindermaildetails.Rows.Count > 0)
                {
                    for (int i = 0; i < remaindermaildetails.Rows.Count; i++)
                    {
                        if (remaindermaildetails.Rows[i]["HostID"].ToString().Contains('('))
                        {
                            string[] host = remaindermaildetails.Rows[i]["HostID"].ToString().Split('(');
                            hostid = host[1].Substring(0, host[1].Length - 1);
                            hostname = host[0];
                        }

                        string[] todate = remaindermaildetails.Rows[i]["todate"].ToString().Split(' ');

                        if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "12" && (remaindermaildetails.Rows[i]["RemainderPassReturn"].ToString() == null || remaindermaildetails.Rows[i]["RemainderPassReturn"].ToString() == string.Empty))
                        {
                            ////subject = "First Remainder to Collect the Visior Passes";
                            status = this.mailNotification.SendRemainderMailToReturnPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString(), todate[0]);
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderReturnFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 1);
                            }
                        }
                        else if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "24" && remaindermaildetails.Rows[i]["RemainderPassReturn"].ToString() == "1")
                        {
                            status = this.mailNotification.SendRemainderMailToReturnPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString(), todate[0]);
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderReturnFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 2);
                            }
                        }
                        else if (remaindermaildetails.Rows[i]["datedifference"].ToString() == "36" && remaindermaildetails.Rows[i]["RemainderPassReturn"].ToString() == "2")
                        {
                            status = this.mailNotification.SendRemainderMailToReturnPass(hostid, hostname, remaindermaildetails.Rows[i]["Facility"].ToString(), remaindermaildetails.Rows[i]["ParentRefernceID"].ToString(), todate[0]);
                            if (status == "Mail sent successfully. ")
                            {
                                maildal.UpdateRemainderReturnFlag(Convert.ToInt32(remaindermaildetails.Rows[i]["ParentRefernceID"]), 3);
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                ManageMailerDal obj = new ManageMailerDal();
                obj.LogBatchHistory(("Batch error SendRemainderMailsToReturnPass " + ex).Substring(0, 200), "NULL");
                throw ex;
            }
        }
        #region Methods
        /// <summary>
        /// Fetch details to send mail
        /// </summary>
        public void GetDetailsForMailBL()
        {
            string eparentid = string.Empty;
            string erequestid = string.Empty;
            string epurpose = string.Empty;
            List<String> UpdateFlag_RequestID = new List<String>();
            //string prefID = string.Empty;
            try
            {
                ManageMailerDal maildal = new ManageMailerDal();
                DataTable maildetails = new DataTable();
                DataTable clientrequestdetails = new DataTable();
                DataTable clientvisitdetails = new DataTable();
                DateTime fromDatedt;
                DateTime todatedt;

                maildetails = maildal.GetDetailsForMailDAL();
                string strLink = System.Configuration.ConfigurationManager.AppSettings["OneCLink"].ToString();
                string status = string.Empty;

                if (maildetails.Rows.Count > 0)
                {
                    for (int i = 0; i < maildetails.Rows.Count; i++)
                    {
                        string parentrefID = string.Empty;
                        string prefID = string.Empty;
                        string Purpose = string.Empty;
                        eparentid = maildetails.Rows[i]["ParentReferenceId"].ToString();
                        erequestid = maildetails.Rows[i]["RequestID"].ToString();
                        epurpose = maildetails.Rows[i]["Purpose"].ToString();


                        DataTable hostdetails = maildal.GetUserDetails(maildetails.Rows[i]["Createdby"].ToString());
                        string patternText = maildetails.Rows[i]["RecurrencePattern"].ToString();
                        string strFacilityAddress = maildetails.Rows[i]["LocationAddress"].ToString();
                        string bulkcount = maildetails.Rows[i]["BulkCount"].ToString();
                        fromDatedt = Convert.ToDateTime(maildetails.Rows[i]["FromDate"]);
                        todatedt = Convert.ToDateTime(maildetails.Rows[i]["ToDate"]);

                        string vmsfromdate = string.Concat(fromDatedt.ToString("MM/dd/yyyy"), " ", maildetails.Rows[i]["FromTime"]);
                        string vmstodate = string.Concat(todatedt.ToString("MM/dd/yyyy"), " ", maildetails.Rows[i]["ToTime"]);
                        #region ONCE
                        if (patternText.ToUpper() == "ONCE" || patternText.ToUpper() == "DAILY")
                        {
                            string summary = string.Empty;
                            string summaryJSON = string.Empty;
                            string contentJSON = string.Empty;
                            string templateID = string.Empty;
                            string content = string.Empty;
                            string title = string.Empty;
                            string visitors = maildetails.Rows[i]["FirstName"].ToString();
                            if (maildetails.Rows[i]["BulkUpload"].ToString() != "True")
                            {
                                if (!string.IsNullOrEmpty(strFacilityAddress))
                                {
                                    status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                }
                                else
                                {
                                    status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                }
                            }
                            else
                            {
                                if (bulkcount != "0")
                                {
                                    if (!string.IsNullOrEmpty(strFacilityAddress))
                                    {
                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                    }
                                    else
                                    {
                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                    }
                                }
                            }
                        }
                        #endregion
                        #region MONTHLY
                        else if (patternText.ToUpper() == "MONTHLY" || patternText.ToUpper() == "WEEKLY")
                        {
                            string daysSelected = maildetails.Rows[i]["Occurence"].ToString();
                            string selectionPattern = string.Empty;
                            if (patternText.ToLower() == "Monthly")
                            {
                                selectionPattern = "Dates Selected";
                            }
                            else if (patternText.ToLower() == "Weekly")
                            {
                                selectionPattern = "Days Selected";
                            }

                            if (maildetails.Rows[i]["BulkUpload"].ToString() != "True")
                            {
                                if (!string.IsNullOrEmpty(maildetails.Rows[i]["Facility"].ToString()))
                                {
                                    status = this.mailNotification.SendCheckinToHostRecc(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, daysSelected, patternText.ToUpper(), selectionPattern, strFacilityAddress, "Address");
                                }
                                else
                                {
                                    status = this.mailNotification.SendCheckinToHostRecc(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, daysSelected, patternText.ToUpper(), selectionPattern);
                                }
                            }
                            else
                            {
                                if (bulkcount != "0")
                                {
                                    if (!string.IsNullOrEmpty(maildetails.Rows[i]["Facility"].ToString()))
                                    {
                                        status = this.mailNotification.SendCheckinToHostReccInterViewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["Facility"].ToString(), string.Empty, string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, daysSelected, patternText.ToUpper(), selectionPattern, strFacilityAddress, "Address");
                                    }
                                    else
                                    {
                                        status = this.mailNotification.SendCheckinToHostReccInterViewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["Facility"].ToString(), string.Empty, string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, daysSelected, patternText.ToUpper(), selectionPattern);
                                    }
                                }
                            }
                        }
                        #endregion
                        #region NULL
                        else if (patternText.ToUpper() == "NULL" || patternText == null || patternText == string.Empty)
                        {
                            #region SINGLE UPLOAD
                            if (maildetails.Rows[i]["BulkUpload"].ToString() != "True")
                            {
                                if (!string.IsNullOrEmpty(strFacilityAddress))
                                {
                                    if (maildetails.Rows[i]["Purpose"].ToString() == "Client")
                                    {
                                        string facility = maildetails.Rows[i]["Facility"].ToString();
                                        string[] facilitysplit = facility.Split('-');
                                        facility = facilitysplit[0];
                                        if (facility == "IND")
                                        {
                                            clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));

                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DataTable securityheaddetails = new DataTable();
                                            DateTime fromdate;
                                            DateTime todate;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            DataTable checktable = new DataTable();
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;

                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;

                                            bool res = true;
                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;

                                            string visitplan = string.Empty;

                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {
                                                prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();

                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                DataTable distinctvisitorname = view.ToTable(true, "VisitorID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = string.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);
                                                    }
                                                    for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                    {
                                                        dates = Convert.ToString(clientvisitdetails.Rows[k]["Date"].ToString());

                                                        //inddate = DateTime.ParseExact(dates, "MM/dd/yyyy", System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat);
                                                        inddate = Convert.ToDateTime(dates);
                                                        inddate = inddate.Date;
                                                        idate = idate + inddate.ToShortDateString() + ",";

                                                    }
                                                    idate = idate.Remove(idate.Length - 1);
                                                    fromdate = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                   @"</td></tr>";

                                                    }
                                                    else if (res == false)
                                                    {

                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + dates +
                                                                      @"</td></tr>";

                                                    }

                                                }

                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }


                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = distinctvisitorname.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;



                                                for (int x = 0; x < clientrequestdetails.Rows.Count; x++)
                                                {
                                                    if (!hostlist.Contains(clientrequestdetails.Rows[x]["HostID"].ToString()))
                                                    {
                                                        if (clientrequestdetails.Rows[x]["HostID"].ToString().Contains('('))
                                                        {
                                                            string[] host = clientrequestdetails.Rows[x]["HostID"].ToString().Split('(');
                                                            hostid = host[1].Substring(0, host[1].Length - 1);
                                                            hostname = host[0];
                                                            hostCRSname = maildal.GetUserDetails(hostid);
                                                            hostidname = hostCRSname.Rows[0]["FirstName"].ToString() + "(" + hostid + ")";
                                                        }
                                                        else
                                                        {
                                                            hostid = clientrequestdetails.Rows[x]["HostID"].ToString();
                                                            hostCRSname = maildal.GetUserDetails(hostid);
                                                            hostidname = hostCRSname.Rows[0]["FirstName"].ToString() + "(" + hostid + ")";
                                                        }

                                                        string requestorid = clientrequestdetails.Rows[x]["HostAssociateID"].ToString();
                                                        if (hostid == clientrequestdetails.Rows[x]["HostAssociateID"].ToString())
                                                        {
                                                            if (visitorcount == 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Meeting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                contentJSON = string.Empty;
                                                                templateID = "1";
                                                                content = string.Empty;
                                                                title = "Visitor Request";
                                                            }
                                                            else if (visitorcount > 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request Submitted";

                                                                namelist.Clear();
                                                                contentJSON = "[";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSON = contentJSON + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                           "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }
                                                            else if (visitorcount == 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Badge collection facility \":{\"value\":\"" + sourcefacility + "\"}," +
                                                                  "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visit Itinerary";
                                                                title = "Visitor Request";
                                                                contentJSON = "[";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSON = contentJSON + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}},";
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }

                                                            else if (visitorcount > 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Badge collection facility \":{\"value\":\"" + sourcefacility + "\"}," +
                                                            "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request";

                                                                ////contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary " + "\",\"highlight\":\"1\"}},";
                                                                contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSON = contentJSON + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}},";
                                                                }

                                                                namelist.Clear();
                                                                contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                ////contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\"}},";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSON = contentJSON + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                            "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }

                                                            status = this.mailNotification.SendSubmittionOTPToHost(hostid,
                                                            hostCRSname.Rows[0]["FirstName"].ToString(), visitors, visitplan,
                                                            clientfromdate, clienttodate, clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                            sourcefacility, summary, summaryJSON, contentJSON, templateID, content, title);
                                                        }
                                                        else
                                                        {
                                                            requestorcrsname = maildal.GetUserDetails(requestorid);

                                                            requestorname = requestorcrsname.Rows[0]["FirstName"].ToString() + "(" + requestorid + ")";

                                                            /*Info card to requestor and OTP to host*/
                                                            if (visitorcount == 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Visiting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                contentJSONreq = string.Empty;

                                                                summaryJSONotp = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Visiting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                     "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                templateID = "1";
                                                                content = string.Empty;
                                                                title = "Visitor Request";
                                                            }
                                                            else if (visitorcount > 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";

                                                                summaryJSONotp = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";


                                                                templateID = "7";
                                                                content = "Details of your client visitors";
                                                                title = "Visitor Request Submitted";

                                                                namelist.Clear();
                                                                contentJSONreq = "[";
                                                                contentJSONotp = "[";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSONreq = contentJSONreq + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                           "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";

                                                                        contentJSONotp = contentJSONotp + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                           "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }
                                                            else if (visitorcount == 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                summaryJSONotp = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                   "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                   "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                templateID = "7";
                                                                content = "Visit Itinerary";
                                                                title = "Visitor Request";
                                                                contentJSONreq = "[";
                                                                contentJSONotp = "[";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSONreq = contentJSONreq + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";

                                                                    contentJSONotp = contentJSONotp + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }

                                                            else if (visitorcount > 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}}";

                                                                summaryJSONotp = "{\"Badge collection facility \":{\"value\":\"" + sourcefacility + "\"}," +
                                                                    "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request";

                                                                ////contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary " + "\",\"highlight\":\"1\"}},";
                                                                contentJSONreq = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                contentJSONotp = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSONreq = contentJSONreq + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";

                                                                    contentJSONotp = contentJSONotp + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                          "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                          "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";
                                                                }

                                                                namelist.Clear();
                                                                ////contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"1\"}},";
                                                                contentJSONreq = contentJSONreq + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                contentJSONotp = contentJSONotp + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSONreq = contentJSONreq + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                            "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";

                                                                        contentJSONotp = contentJSONotp + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                           "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                           "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";

                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }
                                                            /*Info card to requestor*/
                                                            status = this.mailNotification.SendSubmitNotifyToRequestor(requestorid,
                                                                requestorcrsname.Rows[0]["FirstName"].ToString(), visitors,
                                                                clientrequestdetails.Rows[x]["Facility"].ToString(), clientfromdate, clienttodate,
                                                                clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                                summary, summaryJSONreq, contentJSONreq, templateID, content, title);

                                                            status = this.mailNotification.SendOnlyOTPToHost(hostid,
                                                                hostCRSname.Rows[0]["FirstName"].ToString(),
                                                                visitors, visitplan, clientfromdate, clienttodate,
                                                                clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                                requestorname, sourcefacility, summary, summaryJSONotp, contentJSONotp, templateID, content, title);
                                                        }

                                                        securityheaddetails = maildal.GetSecurityHeadDetails(clientrequestdetails.Rows[x]["Facility"].ToString());
                                                        if (securityheaddetails.Rows.Count > 0)
                                                        {
                                                            securityid = securityheaddetails.Rows[0]["POCAssociateId"].ToString();
                                                            status = this.mailNotification.SendMailtoSecurityHead(securityid, firstname, visitors, clientrequestdetails.Rows[x]["Facility"].ToString(), clientfromdate, clienttodate, clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(), hostidname);
                                                        }

                                                        //// }
                                                    }

                                                    hostlist.Add(clientrequestdetails.Rows[x]["HostID"].ToString());
                                                }
                                            }
                                            else
                                            {
                                                prefID = null;
                                            }
                                        }
                                        else
                                        {
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            //Grouping for non indian visitors 
                                            clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));

                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DataTable securityheaddetails = new DataTable();
                                            DateTime fromdate;
                                            DateTime todate;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            DataTable checktable = new DataTable();


                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;

                                            bool res = true;
                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;

                                            string visitplan = string.Empty;

                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                         @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {
                                                prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();

                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                DataTable distinctvisitorname = view.ToTable(true, "VisitorID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = string.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);
                                                    }
                                                    for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                    {
                                                        dates = Convert.ToString(clientvisitdetails.Rows[k]["Date"].ToString());

                                                        //inddate = DateTime.ParseExact(dates, "MM/dd/yyyy", System.Globalization.CultureInfo.CurrentUICulture.DateTimeFormat);
                                                        inddate = Convert.ToDateTime(dates);
                                                        inddate = inddate.Date;
                                                        idate = idate + inddate.ToShortDateString() + ",";

                                                    }
                                                    idate = idate.Remove(idate.Length - 1);
                                                    fromdate = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                   @"</td></tr>";

                                                    }
                                                    else if (res == false)
                                                    {

                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + dates +
                                                                      @"</td></tr>";

                                                    }

                                                }

                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }


                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = distinctvisitorname.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;
                                                //end of Grouping 
                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                            }
                                        }
                                    }
                                    //else if(maildetails.Rows[i]["Purpose"].ToString() == "Family Members" || maildetails.Rows[i]["Purpose"].ToString() == "Imp/VIP Visitor" || maildetails.Rows[i]["Purpose"].ToString() == "Others" || maildetails.Rows[i]["Purpose"].ToString() == "Vendor"|| (maildetails.Rows[i]["Purpose"].ToString() == "Interview Candidate" && bulkcount== "0"))

                                    //{
                                    else
                                    {
                                        string facility = maildetails.Rows[i]["Facility"].ToString();
                                        string[] facilitysplit = facility.Split('-');
                                        facility = facilitysplit[0];
                                        if (facility == "IND")
                                        {

                                            clientrequestdetails = maildal.GetRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]), maildetails.Rows[i]["Purpose"].ToString());

                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate1;
                                            DateTime todate1;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;
                                            bool res = true;

                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            //grouping mails for General Visistors - 597397
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";

                                            if (clientrequestdetails.Rows.Count > 0)
                                            {
                                                prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();


                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {

                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = String.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {
                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);
                                                    fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                  @"</td></tr>";
                                                    }
                                                    else if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());

                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + dates +
                                                                      @"</td></tr>";

                                                    }

                                                }

                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }

                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;

                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);

                                                //securityheaddetails = maildal.GetSecurityHeadDetails(clientrequestdetails.Rows[i]["Facility"].ToString());
                                                //if (securityheaddetails.Rows.Count > 0)
                                                //{
                                                //    securityid = securityheaddetails.Rows[0]["POCAssociateId"].ToString();
                                                //    status = this.mailNotification.SendMailtoSecurityHead(securityid, firstname, visitors, clientrequestdetails.Rows[i]["Facility"].ToString(), clientfromdate, clienttodate, clientrequestdetails.Rows[i]["ParentReferenceId"].ToString(), hostidname);
                                                //}
                                                //mobile cards-597397-descopped-part
                                            }
                                            else
                                            {
                                                prefID = null;
                                            }
                                        }
                                        else
                                        {
                                            clientrequestdetails = maildal.GetRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]), maildetails.Rows[i]["Purpose"].ToString());

                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate1;
                                            DateTime todate1;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;
                                            bool res = true;

                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            //grouping mails for General Visistors - 597397
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                            @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";

                                            if (clientrequestdetails.Rows.Count > 0)
                                            {
                                                prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();


                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {

                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = String.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {
                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);
                                                    fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                  @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                  @"</td></tr>";
                                                    }
                                                    else if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());

                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                      @"</td><td width = " + "'10%'" + ">" + dates +
                                                                      @"</td></tr>";

                                                    }

                                                }
                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {
                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }
                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;

                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                            }

                                            //}
                                        }
                                        //else
                                        //{

                                        //    string summary = string.Empty;
                                        //    string summaryJSON = string.Empty;
                                        //    string contentJSON = string.Empty;
                                        //    string templateID = string.Empty;
                                        //    string content = string.Empty;
                                        //    string title = string.Empty;
                                        //    status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                        //}
                                    }
                                }
                                else
                                {
                                    if (maildetails.Rows[i]["Purpose"].ToString() == "Client")
                                    {
                                        string facility = maildetails.Rows[i]["Facility"].ToString();
                                        string[] facilitysplit = facility.Split('-');
                                        facility = facilitysplit[0];
                                        if (facility == "IND")
                                        {
                                            clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));

                                            prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();
                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate1;
                                            DateTime todate1;
                                            bool res = true;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();

                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;


                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {

                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = string.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {

                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);

                                                    fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                           @"</td></tr>";

                                                    }

                                                    if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + dates +
                                                                           @"</td></tr>";

                                                    }

                                                }

                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }

                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;



                                                for (int x = 0; x < clientrequestdetails.Rows.Count; x++)
                                                {
                                                    if (!hostlist.Contains(clientrequestdetails.Rows[x]["HostID"].ToString()))
                                                    {

                                                        if (clientrequestdetails.Rows[x]["HostID"].ToString().Contains('('))
                                                        {
                                                            string[] host = clientrequestdetails.Rows[x]["HostID"].ToString().Split('(');
                                                            hostid = host[1].Substring(0, host[1].Length - 1);
                                                            hostname = host[0];
                                                            hostCRSname = maildal.GetUserDetails(hostid);
                                                            hostidname = hostCRSname.Rows[0]["FirstName"].ToString() + "(" + hostid + ")";
                                                        }
                                                        else
                                                        {
                                                            hostid = clientrequestdetails.Rows[x]["HostID"].ToString();
                                                            hostCRSname = maildal.GetUserDetails(hostid);
                                                            hostidname = hostCRSname.Rows[0]["FirstName"].ToString() + "(" + hostid + ")";
                                                        }

                                                        string requestorid = clientrequestdetails.Rows[x]["HostAssociateID"].ToString();
                                                        fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[x]["FromDate"].ToString());
                                                        todate1 = Convert.ToDateTime(clientrequestdetails.Rows[x]["ToDate"].ToString());
                                                        clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[x]["FromTime"].ToString());
                                                        clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[x]["ToTime"].ToString());
                                                        if (hostid == clientrequestdetails.Rows[x]["HostAssociateID"].ToString())
                                                        {
                                                            if (visitorcount == 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Meeting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                contentJSON = string.Empty;
                                                                templateID = "1";
                                                                content = string.Empty;
                                                                title = "Visitor Request";
                                                            }
                                                            else if (visitorcount > 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request";

                                                                namelist.Clear();
                                                                contentJSON = "[";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSON = contentJSON + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                            "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }
                                                            else if (visitorcount == 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                  "\"Express Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}}" +
                                                                  "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visitor Itinerary";
                                                                title = "Visitor Request";
                                                                contentJSON = "[";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSON = contentJSON + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}},";
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }
                                                            else if (visitorcount > 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSON = "{\"Badge collection facility \":{\"value\":\"" + sourcefacility + "\"}," +
                                                            "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request";

                                                                ////contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"1\"}},";
                                                                contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSON = contentJSON + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}},";
                                                                }

                                                                namelist.Clear();
                                                                ////contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"1\"}},";
                                                                contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSON = contentJSON + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                            "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSON = contentJSON.Remove(contentJSON.Length - 1) + "]";
                                                            }

                                                            status = this.mailNotification.SendSubmittionOTPToHost(hostid,
                                                                hostCRSname.Rows[0]["FirstName"].ToString(), visitors, visitplan,
                                                                clientfromdate, clienttodate, clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                                sourcefacility, summary, summaryJSON, contentJSON, templateID, content, title);
                                                        }
                                                        else
                                                        {
                                                            requestorcrsname = maildal.GetUserDetails(requestorid);
                                                            requestorname = requestorcrsname.Rows[0]["FirstName"].ToString() + "(" + requestorid + ")";

                                                            /*Info card to requestor and OTP to host*/
                                                            if (visitorcount == 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Visiting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";
                                                                contentJSONreq = string.Empty;

                                                                summaryJSONotp = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                    "\"Visiting Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                    "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                templateID = "1";
                                                                content = string.Empty;
                                                                title = "Visitor Request";
                                                            }
                                                            else if (visitorcount > 1 && facilitycount == 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";

                                                                summaryJSONotp = "{\"Visit Location\":{\"value\":\"" + distinctValues.Rows[0]["Facility"].ToString() + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                    "\"Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                    "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                    "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}}";

                                                                templateID = "7";
                                                                content = "Details of your client visitors";
                                                                title = "Visitor Request";

                                                                namelist.Clear();
                                                                contentJSONreq = "[";
                                                                contentJSONotp = "[";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSONreq = contentJSONreq + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                              "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";

                                                                        contentJSONotp = contentJSONotp + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                             "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";
                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }
                                                            else if (visitorcount == 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                    "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                summaryJSONotp = "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[0]["Name"].ToString() + "\"}," +
                                                                   "\"Visitor Organization \":{\"value\":\"" + clientrequestdetails.Rows[0]["Company"].ToString() + "\"}," +

                                                                   "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}," +
                                                                "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}}";

                                                                templateID = "7";
                                                                content = "Visit itinerary ";
                                                                title = "Visitor Request";
                                                                contentJSONreq = "[";
                                                                contentJSONotp = "[";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSONreq = contentJSONreq + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";

                                                                    contentJSONotp = contentJSONotp + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }

                                                            else if (visitorcount > 1 && facilitycount > 1)
                                                            {
                                                                summary = "Client visitor request summary";
                                                                summaryJSONreq = "{\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}}";

                                                                summaryJSONotp = "{\"Badge collection facility \":{\"value\":\"" + sourcefacility + "\"}," +
                                                                    "\"Primary Host ID\":{\"value\":\"" + distinctValues.Rows[0]["HostID"].ToString() + "\"}," +
                                                                      "\"Requester\":{\"value\":\"" + requestorname + "\"}," +
                                                                    "\"Check-in Code\":{\"value\":\"" + clientrequestdetails.Rows[0]["ParentReferenceId"].ToString() + "\"}}";
                                                                templateID = "7";
                                                                content = "Visitor details";
                                                                title = "Visitor Request";

                                                                ////contentJSON = "[{\"Header\":{\"value\":\"" + "Visit itinerary " + "\",\"highlight\":\"1\"}},";
                                                                contentJSONreq = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                contentJSONotp = "[{\"Header\":{\"value\":\"" + "Visit itinerary" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                                {
                                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                                    contentJSONreq = contentJSONreq + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                           "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                           "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";

                                                                    contentJSONotp = contentJSONotp + "{\"Visit Facility \":{\"value\":\"" + distinctValues.Rows[z]["Facility"].ToString() + "\"}," +
                                                                          "\"Meeting Schedule\":{\"value\":\"" + clientfromdate + " to " + clienttodate + "\",\"icon\":\"\\uD83D\\uDCC5\"}," +
                                                                          "\"Host ID\":{\"value\":\"" + distinctValues.Rows[z]["HostID"].ToString() + "\"}},";
                                                                }

                                                                namelist.Clear();
                                                                ////contentJSON = contentJSON + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"1\"}},";
                                                                contentJSONreq = contentJSONreq + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                contentJSONotp = contentJSONotp + "{\"Header\":{\"value\":\"" + "Visitor details" + "\",\"highlight\":\"" + "true" + "\",\"ignorekey\":\"" + "true" + "\"},\"\":{\"\":\"\"}},";
                                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                                {
                                                                    if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                                    {
                                                                        contentJSONreq = contentJSONreq + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                            "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                            "\"Mobile Number\":{\"value\":\"" + clientrequestdetails.Rows[j]["MobileNo"].ToString() + "\"}},";

                                                                        contentJSONotp = contentJSONotp + "{\"Visitor Name \":{\"value\":\"" + clientrequestdetails.Rows[j]["Name"].ToString() + "\"}," +
                                                                           "\"Organization\":{\"value\":\"" + clientrequestdetails.Rows[j]["Company"].ToString() + "\"}," +
                                                                             "\"Action-Call\":{\"value\":\"" + clientrequestdetails.Rows[0]["MobileNo"].ToString() + "\"}},";

                                                                    }

                                                                    namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                                                }
                                                                contentJSONreq = contentJSONreq.Remove(contentJSONreq.Length - 1) + "]";
                                                                contentJSONotp = contentJSONotp.Remove(contentJSONotp.Length - 1) + "]";
                                                            }
                                                            /*Info card to requestor*/

                                                            status = this.mailNotification.SendSubmitNotifyToRequestor(requestorid,
                                                                requestorcrsname.Rows[0]["FirstName"].ToString(), visitors,
                                                                clientrequestdetails.Rows[x]["Facility"].ToString(), clientfromdate, clienttodate,
                                                                clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                                 summary, summaryJSONreq, contentJSONreq, templateID, content, title);

                                                            status = this.mailNotification.SendOnlyOTPToHost(hostid,
                                                                hostCRSname.Rows[0]["FirstName"].ToString(), visitors,
                                                                visitplan, clientfromdate, clienttodate, clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(),
                                                                requestorname, sourcefacility, summary, summaryJSONotp, contentJSONotp, templateID, content, title);
                                                        }

                                                        securityheaddetails = maildal.GetSecurityHeadDetails(clientrequestdetails.Rows[x]["Facility"].ToString());
                                                        if (securityheaddetails.Rows.Count > 0)
                                                        {
                                                            securityid = securityheaddetails.Rows[0]["POCAssociateId"].ToString();
                                                            status = this.mailNotification.SendMailtoSecurityHead(securityid, firstname, visitors, clientrequestdetails.Rows[x]["Facility"].ToString(), clientfromdate, clienttodate, clientrequestdetails.Rows[x]["ParentReferenceId"].ToString(), hostidname);
                                                        }
                                                    }

                                                    hostlist.Add(clientrequestdetails.Rows[x]["HostID"].ToString());
                                                }
                                            }
                                        }
                                        else
                                        {
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;

                                            //Grouping portion for non indian Visitors
                                            clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));
                                            prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();
                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate1;
                                            DateTime todate1;
                                            bool res = true;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;
                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {

                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = string.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {

                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);

                                                    fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                           @"</td></tr>";

                                                    }

                                                    if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + dates +
                                                                           @"</td></tr>";

                                                    }

                                                }
                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }
                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;
                                                //end of Grouping portion
                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                            }
                                        }
                                    }
                                    else
                                    {
                                        //notify for others
                                        string facility = maildetails.Rows[i]["Facility"].ToString();
                                        string[] facilitysplit = facility.Split('-');
                                        facility = facilitysplit[0];
                                        if (facility == "IND")
                                        {
                                            //clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));
                                            clientrequestdetails = maildal.GetRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]), maildetails.Rows[i]["Purpose"].ToString());
                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate;
                                            DateTime todate;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;
                                            bool res = true;

                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {
                                                prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();
                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = String.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {

                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);

                                                    fromdate = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                           @"</td></tr>";
                                                    }
                                                    else if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["RequestID"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + dates +
                                                                           @"</td></tr>";
                                                    }


                                                }

                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }

                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;

                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                                //if (securityheaddetails.Rows.Count > 0)
                                                //{
                                                //    securityid = securityheaddetails.Rows[0]["POCAssociateId"].ToString();
                                                //    status = this.mailNotification.SendMailtoSecurityHead(securityid, firstname, visitors, clientrequestdetails.Rows[i]["Facility"].ToString(), clientfromdate, clienttodate, clientrequestdetails.Rows[i]["ParentReferenceId"].ToString(), hostidname);
                                                //}
                                            }
                                            //}
                                        }
                                        else
                                        {
                                            string summary = string.Empty;
                                            string summaryJSON = string.Empty;
                                            string contentJSON = string.Empty;
                                            string templateID = string.Empty;
                                            string content = string.Empty;
                                            string title = string.Empty;
                                            //Grouping portion for non indian Visitors
                                            clientrequestdetails = maildal.GetClientRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]));
                                            prefID = clientrequestdetails.Rows[0]["ParentReferenceId"].ToString();
                                            string visitors = string.Empty;
                                            string dates = string.Empty;
                                            string visitplan = string.Empty;
                                            string hostid = string.Empty;
                                            string hostname = string.Empty;
                                            string firstname = string.Empty;
                                            string hostidname = string.Empty;
                                            string securityid = string.Empty;
                                            string requestorname = string.Empty;
                                            DateTime fromdate1;
                                            DateTime todate1;
                                            bool res = true;
                                            string clientfromdate = string.Empty;
                                            string clienttodate = string.Empty;
                                            string parentHost = string.Empty;
                                            string sourcefacility = string.Empty;
                                            DataTable hostCRSname = new DataTable();
                                            DataTable requestorcrsname = new DataTable();
                                            DataTable securityheaddetails = new DataTable();
                                            ArrayList hostlist = new ArrayList();
                                            ArrayList namelist = new ArrayList();
                                            ArrayList visitlist = new ArrayList();
                                            string summaryJSONreq = string.Empty;
                                            string contentJSONreq = string.Empty;


                                            string summaryJSONotp = string.Empty;
                                            string contentJSONotp = string.Empty;
                                            string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Check-in Code</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visit Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Visiting Date and Time</b>" + "</td></tr>";

                                            string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                           @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";
                                            if (clientrequestdetails.Rows.Count > 0)
                                            {

                                                DataView view = new DataView(clientrequestdetails);
                                                DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                                for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                                {
                                                    UpdateFlag_RequestID.Add(clientrequestdetails.Rows[j]["RequestID"].ToString());
                                                    DateTime inddate;
                                                    string idate = string.Empty;
                                                    clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[j]["RequestID"]));
                                                    if (clientvisitdetails.Rows.Count > 0)
                                                    {
                                                        res = checkcontdates(clientvisitdetails);

                                                        for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                        {

                                                            dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                            inddate = Convert.ToDateTime(dates);
                                                            inddate = inddate.Date;
                                                            idate = idate + inddate.ToShortDateString() + ",";
                                                        }
                                                    }
                                                    idate = idate.Remove(idate.Length - 1);

                                                    fromdate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(clientrequestdetails.Rows[j]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                    if (res == true)
                                                    {
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientfromdate + " to " + clienttodate +
                                                                           @"</td></tr>";

                                                    }

                                                    if (res == false)
                                                    {
                                                        dates = string.Concat(idate, " ", clientrequestdetails.Rows[j]["FromTime"].ToString() + " to " + clientrequestdetails.Rows[j]["ToTime"].ToString());
                                                        visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["ParentReferenceId"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Facility"].ToString() +
                                                                           @"</td><td width = " + "'10%'" + ">" + dates +
                                                                           @"</td></tr>";

                                                    }

                                                }
                                                for (var z = 0; z < distinctValues.Rows.Count; z++)
                                                {

                                                    fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                    todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                    clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                    clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                    visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                                   @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                                   @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                                   @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                                   @"</td></tr>";

                                                }

                                                visitors = header + visitors;
                                                visitplan = visitplanheader + visitplan;
                                                parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                                sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();

                                                int visitorcount = clientrequestdetails.Rows.Count;
                                                int facilitycount = distinctValues.Rows.Count;
                                                //end of Grouping portion
                                                status = this.mailNotification.SendCheckinToHost(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), visitors, maildetails.Rows[i]["Company"].ToString(), maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), string.Empty, vmsfromdate, vmstodate, maildetails.Rows[i]["ParentReferenceId"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                            }
                                        }
                                        //end of notify for others

                                    }
                                }
                            }
                            #endregion
                            #region BULK UPLOAD
                            else
                            {
                                if (bulkcount != "0")
                                {
                                    //bulk upload changes
                                    string facility = maildetails.Rows[i]["Facility"].ToString();
                                    string[] facilitysplit = facility.Split('-');
                                    facility = facilitysplit[0];
                                    if (facility == "IND")
                                    {
                                        clientrequestdetails = maildal.GetRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]), maildetails.Rows[i]["Purpose"].ToString());
                                        string visitors = string.Empty;
                                        string visitplan = string.Empty;
                                        string VisitDate = string.Empty;
                                        string hostid = string.Empty;
                                        string hostname = string.Empty;
                                        string firstname = string.Empty;
                                        string hostidname = string.Empty;
                                        string fromdate = string.Empty;
                                        string todate = string.Empty;
                                        string fromtime = string.Empty;
                                        string totime = string.Empty;
                                        string securityid = string.Empty;
                                        string requestorname = string.Empty;
                                        DateTime fromdate1;
                                        DateTime todate1;
                                        string clientfromdate = string.Empty;
                                        string clienttodate = string.Empty;
                                        string parentHost = string.Empty;
                                        string sourcefacility = string.Empty;
                                        DataTable hostCRSname = new DataTable();
                                        DataTable requestorcrsname = new DataTable();
                                        DataTable securityheaddetails = new DataTable();
                                        ArrayList hostlist = new ArrayList();
                                        ArrayList namelist = new ArrayList();
                                        ArrayList visitlist = new ArrayList();
                                        string summary = string.Empty;
                                        string summaryJSON = string.Empty;
                                        string contentJSON = string.Empty;
                                        string templateID = string.Empty;
                                        string content = string.Empty;
                                        string title = string.Empty;
                                        string summaryJSONreq = string.Empty;
                                        string contentJSONreq = string.Empty;
                                        string dates = string.Empty;
                                        bool res = true;
                                        string visitplandates = string.Empty;
                                        string summaryJSONotp = string.Empty;
                                        string contentJSONotp = string.Empty;
                                        string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                        @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                        @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td></tr>";

                                        string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";

                                        string visitheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Date</b>" + "</td>" +
                                                             @"<td width=" + "'10%'" + ">" + "<b>Time</b>" + "</td></tr>";
                                        if (clientrequestdetails.Rows.Count > 0)
                                        {
                                            UpdateFlag_RequestID.Add((maildetails.Rows[i]["ParentReferenceId"]).ToString());
                                            DataView view = new DataView(clientrequestdetails);
                                            DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                            for (var z = 0; z < distinctValues.Rows.Count; z++)
                                            {
                                                fromtime = distinctValues.Rows[z]["FromTime"].ToString();
                                                totime = distinctValues.Rows[z]["ToTime"].ToString();
                                            }
                                            DateTime inddate;
                                            string idate = string.Empty;
                                            clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[0]["RequestID"]));
                                            if (clientvisitdetails.Rows.Count > 0)
                                            {
                                                res = checkcontdates(clientvisitdetails);

                                                for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                {
                                                    dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                    inddate = Convert.ToDateTime(dates);
                                                    inddate = inddate.Date;
                                                    idate = inddate.ToShortDateString();
                                                    VisitDate = VisitDate + @"<tr><td width= " + "'10%'" + ">" + idate +
                                                          @"</td><td width = " + "'10%'" + ">" + fromtime + " to " + totime +
                                                          @"</td></tr>";
                                                }
                                            }
                                            for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                            {
                                                if (!namelist.Contains(clientrequestdetails.Rows[j]["VisitorID"].ToString()))
                                                {
                                                    visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                               @"</td></tr>";
                                                }

                                                namelist.Add(clientrequestdetails.Rows[j]["VisitorID"].ToString());
                                            }

                                            for (var z = 0; z < distinctValues.Rows.Count; z++)
                                            {

                                                fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                               @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                               @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                               @"</td></tr>";

                                            }
                                            visitors = header + visitors;
                                            visitplan = visitplanheader + visitplan;
                                            visitplandates = visitheader + VisitDate;
                                            parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                            sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();
                                            int visitorcount = clientrequestdetails.Rows.Count;
                                            int facilitycount = distinctValues.Rows.Count;
                                                    if (!string.IsNullOrEmpty(strFacilityAddress))
                                                    {
                                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, visitplandates, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                                    }
                                                    else
                                                    {
                                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, visitplandates, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                                    }
                                           
                                        }
                                    }
                                    else
                                    {
                                        //Grouping portion for non indian Visitors
                                        clientrequestdetails = maildal.GetRequestwithParentrefernceID(Convert.ToInt32(maildetails.Rows[i]["ParentReferenceId"]), maildetails.Rows[i]["Purpose"].ToString());
                                        string visitors = string.Empty;
                                        string visitplan = string.Empty;
                                        string VisitDate = string.Empty;
                                        string hostid = string.Empty;
                                        string hostname = string.Empty;
                                        string firstname = string.Empty;
                                        string hostidname = string.Empty;
                                        string fromdate = string.Empty;
                                        string todate = string.Empty;
                                        string fromtime = string.Empty;
                                        string totime = string.Empty;
                                        string securityid = string.Empty;
                                        string requestorname = string.Empty;
                                        DateTime fromdate1;
                                        DateTime todate1;
                                        string clientfromdate = string.Empty;
                                        string clienttodate = string.Empty;
                                        string parentHost = string.Empty;
                                        string sourcefacility = string.Empty;
                                        DataTable hostCRSname = new DataTable();
                                        DataTable requestorcrsname = new DataTable();
                                        DataTable securityheaddetails = new DataTable();
                                        ArrayList hostlist = new ArrayList();
                                        ArrayList namelist = new ArrayList();
                                        ArrayList visitlist = new ArrayList();
                                        string summary = string.Empty;
                                        string summaryJSON = string.Empty;
                                        string contentJSON = string.Empty;
                                        string templateID = string.Empty;
                                        string content = string.Empty;
                                        string title = string.Empty;
                                        string summaryJSONreq = string.Empty;
                                        string contentJSONreq = string.Empty;
                                        string dates = string.Empty;
                                        bool res = true;
                                        string visitplandates = string.Empty;
                                        string summaryJSONotp = string.Empty;
                                        string contentJSONotp = string.Empty;
                                        string header = @"<tr><td width=" + "'10%'" + ">" + "<b>Name</b>" + "</td>" +
                                                        @"<td width=" + "'10%'" + ">" + "<b>Company</b>" + "</td>" +
                                                        @"<td width=" + "'10%'" + ">" + "<b>Mobile Number</b>" + "</td></tr>";

                                        string visitplanheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Location</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>From</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>To</b>" + "</td>" +
                                                       @"<td width=" + "'10%'" + ">" + "<b>Host</b>" + "</td></tr>";

                                        string visitheader = @"<tr><td width=" + "'10%'" + ">" + "<b>Date</b>" + "</td>" +
                                                             @"<td width=" + "'10%'" + ">" + "<b>Time</b>" + "</td></tr>";
                                        if (clientrequestdetails.Rows.Count > 0)
                                        {
                                            UpdateFlag_RequestID.Add((maildetails.Rows[i]["ParentReferenceId"]).ToString());
                                            DataView view = new DataView(clientrequestdetails);
                                            DataTable distinctValues = view.ToTable(true, "FromDate", "ToDate", "FromTime", "ToTime", "Facility", "HostID");
                                            for (var z = 0; z < distinctValues.Rows.Count; z++)
                                            {
                                                fromtime = distinctValues.Rows[z]["FromTime"].ToString();
                                                totime = distinctValues.Rows[z]["ToTime"].ToString();
                                            }
                                            DateTime inddate;
                                            string idate = string.Empty;
                                            clientvisitdetails = maildal.GetDatestwithParentrefernceID(Convert.ToInt32(clientrequestdetails.Rows[0]["RequestID"]));
                                            if (clientvisitdetails.Rows.Count > 0)
                                            {
                                                res = checkcontdates(clientvisitdetails);

                                                for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
                                                {
                                                    dates = clientvisitdetails.Rows[k]["Date"].ToString();
                                                    inddate = Convert.ToDateTime(dates);
                                                    inddate = inddate.Date;
                                                    idate = inddate.ToShortDateString();
                                                    VisitDate = VisitDate + @"<tr><td width= " + "'10%'" + ">" + idate +
                                                          @"</td><td width = " + "'10%'" + ">" + fromtime + " to " + totime +
                                                          @"</td></tr>";
                                                }
                                            }
                                            for (var j = 0; j < clientrequestdetails.Rows.Count; j++)
                                            {                                              
                                                    visitors = visitors + @"<tr><td width= " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Name"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["Company"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientrequestdetails.Rows[j]["MobileNo"].ToString() +
                                                               @"</td></tr>";                                               
                                            }

                                            for (var z = 0; z < distinctValues.Rows.Count; z++)
                                            {

                                                fromdate1 = Convert.ToDateTime(distinctValues.Rows[z]["FromDate"].ToString());
                                                todate1 = Convert.ToDateTime(distinctValues.Rows[z]["ToDate"].ToString());
                                                clientfromdate = string.Concat(fromdate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["FromTime"].ToString());
                                                clienttodate = string.Concat(todate1.ToString("MM/dd/yyyy"), " ", distinctValues.Rows[z]["ToTime"].ToString());
                                                visitplan = visitplan + @"<tr><td width= " + "'10%'" + ">" + distinctValues.Rows[z]["Facility"].ToString() +
                                                               @"</td><td width = " + "'10%'" + ">" + clientfromdate +
                                                               @"</td><td width = " + "'10%'" + ">" + clienttodate +
                                                               @"</td><td width = " + "'10%'" + ">" + distinctValues.Rows[z]["HostID"].ToString() +
                                                               @"</td></tr>";

                                            }

                                            visitors = header + visitors;
                                            visitplan = visitplanheader + visitplan;
                                            visitplandates = visitheader + VisitDate;
                                            parentHost = clientrequestdetails.Rows[0]["HostID"].ToString();
                                            sourcefacility = clientrequestdetails.Rows[0]["Facility"].ToString();
                                            int visitorcount = clientrequestdetails.Rows.Count;
                                            int facilitycount = distinctValues.Rows.Count;
                                                    if (!string.IsNullOrEmpty(strFacilityAddress))
                                                    {
                                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, visitplandates, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, strFacilityAddress, "Address", summary, summaryJSON, contentJSON, templateID, content, title);
                                                    }
                                                    else
                                                    {
                                                        status = this.mailNotification.SendCheckinToHostInterviewCandidates(maildetails.Rows[i]["Createdby"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), hostdetails.Rows[0].ItemArray[0].ToString(), bulkcount, string.Empty, maildetails.Rows[i]["Facility"].ToString(), maildetails.Rows[i]["City"].ToString(), string.Empty, string.Empty, visitplandates, vmstodate, maildetails.Rows[i]["RequestID"].ToString(), strLink, summary, summaryJSON, contentJSON, templateID, content, title);
                                                    }
                                                 

                                                }
                                            }
                                        }
                                    }
                            #endregion
                        }
                        #endregion
                        ////blockend
                        if (ConfigurationManager.AppSettings["outlookmailsend"].ToString() == "Y")
                        {
                            if (Convert.ToInt32(maildetails.Rows[i]["OutlookNotfication"]) == 1 && string.IsNullOrEmpty(maildetails.Rows[i]["MailGuid"].ToString()))
                            {
                                if (maildetails.Rows[i]["BulkUpload"].ToString() != "True")
                                {
                                    this.BlockCalendarinOutLook(maildetails.Rows[i]["RequestID"].ToString(), vmsfromdate, vmstodate, maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), maildetails.Rows[i]["City"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), maildetails.Rows[i]["Facility"].ToString(), hostdetails.Rows[0].ItemArray[0].ToString());
                                }
                                else
                                {
                                    this.BlockCalendarinOutLook(maildetails.Rows[i]["RequestID"].ToString(), vmsfromdate, vmstodate, maildetails.Rows[i]["FirstName"].ToString(), maildetails.Rows[i]["Purpose"].ToString(), maildetails.Rows[i]["City"].ToString(), hostdetails.Rows[0].ItemArray[3].ToString(), maildetails.Rows[i]["Facility"].ToString(), hostdetails.Rows[0].ItemArray[0].ToString());
                                }
                            }
                        }

                        //if (!string.IsNullOrEmpty(maildetails.Rows[i]["EmailID"].ToString()))
                        //{
                        //    string link = ConfigurationManager.AppSettings["SENDLINKTOVISITOR"].ToString();
                        //    string linkIDs = Encrypt(maildetails.Rows[i]["RequestID"].ToString().ToString());
                        //    link = string.Concat(ConfigurationManager.AppSettings["SENDLINKTOVISITOR"].ToString(), linkIDs);
                        //    string sendLinkToVisitorEnable = ConfigurationManager.AppSettings["SendLinkToVisitorEnable"].ToString();
                        //    if ((string.Compare(sendLinkToVisitorEnable, "Y") == 0) && (maildetails.Rows[i]["Purpose"].ToString() == "Interview Candidate"))
                        //    {
                        //        this.SendCheckinToVisitor(
                        //                      maildetails.Rows[i]["FirstName"].ToString(),
                        //                      maildetails.Rows[i]["EmailID"].ToString(),
                        //                     maildetails.Rows[i]["RequestedDate"].ToString(),
                        //                     maildetails.Rows[i]["RequestID"].ToString(),
                        //                     link);
                        //    }
                        //    else if (string.Compare(sendLinkToVisitorEnable, "Y") == 0)
                        //    {
                        //        link = "false";

                        //    }
                        //}

                        if (status == "Mail sent successfully. ")
                        {
                            if (maildetails.Rows[i]["Purpose"].ToString() == "Client")
                            {
                                maildal.UpdateMailerFlag(UpdateFlag_RequestID, maildetails.Rows[i]["ParentReferenceId"].ToString());
                                UpdateFlag_RequestID.Clear();

                            }
                            else
                            {
                                maildal.UpdateMailerFlag(UpdateFlag_RequestID, maildetails.Rows[i]["ParentReferenceId"].ToString());
                                UpdateFlag_RequestID.Clear();

                            }
                        }
                    }
                }
            }


            catch (Exception ex)
            {
                ManageMailerDal obj = new ManageMailerDal();
                if (epurpose == "Client")
                {
                    obj.UpdateMailerFlag(UpdateFlag_RequestID, eparentid);
                    obj.LogBatchHistory(("Batch error GetDetailsForMailBL " + ex).Substring(0, 200), eparentid);
                }

                else
                {
                    obj.UpdateMailerFlag(UpdateFlag_RequestID, eparentid);
                    obj.LogBatchHistory(("Batch error GetDetailsForMailBL " + ex).Substring(0, 200), eparentid);
                }
                //throw ex;
            }
        }

        #endregion

        /// <summary>
        /// block calendar in outlook
        /// </summary>
        /// <param name="requestId">request Id</param>
        /// <param name="fromDate">from Date</param>
        /// <param name="todate">to Date</param>
        /// <param name="name">first Name</param>
        /// <param name="purpose">get purpose</param>
        /// <param name="city">get city</param>
        /// <param name="hostEmail">host Email</param>
        /// <param name="facilityName">facility Name</param>
        /// <param name="hostName">host Name</param>
        public void BlockCalendarinOutLook(string requestId, string fromDate, string todate, string name, string purpose, string city, string hostEmail, string facilityName, string hostName)
        {
            ManageMailerDal maildal = new ManageMailerDal();
            try
            {
                Exchange2010Service exchangeServer = new Exchange2010Service();
                DateTime dataEventDate = Convert.ToDateTime(fromDate);
                DateTime dataEventEndDate = Convert.ToDateTime(todate);
                string subject = Convert.ToString(ConfigurationManager.AppSettings["OutlookSubject"]);
                string visitorFirstName = name;
                ////string visitorLastName = Name;

                if (string.IsNullOrEmpty(visitorFirstName))
                {
                    visitorFirstName = purpose;
                }

                string mailBody = "Hi " + hostName + "," + "</br>" +
                "Please accept this mail request in order  to integrate your visitor appointment with outlook.</br></br>"
                    + "The Visit Details are as follows:  </br></br><b>" + "Visitor Name: " + visitorFirstName + "</br>City: " +
                   city + "</br>Facility: " + facilityName + "</b></br></br>Regards,</br>Physical Security";
                if (!string.IsNullOrEmpty(hostEmail))
                {
                    // for add new blocking to calendar
                    string guid = exchangeServer.CreateAppointment(subject, mailBody, dataEventDate, dataEventEndDate, hostEmail.Trim(), facilityName + "-" + city);

                    // update response guid from exchange server in to database                     
                    maildal.UpdateOutlookNotificationGuid(requestId, guid);
                }
            }
            catch (Exception ex)
            {
                ManageMailerDal obj = new ManageMailerDal();
                obj.LogBatchHistory(("Batch error BlockCalendarinOutLook " + ex).Substring(0, 200), "NULL");
                throw ex;
            }
        }

        /// <summary>
        /// Send Check in To Visitor
        /// </summary>
        /// <param name="hostName">host Name</param>
        /// <param name="visitorEmailID">visitor EmailID</param>
        /// <param name="date">date value</param>
        /// <param name="checkInCode">Check in Code</param>
        /// <param name="link">link value</param>
        public void SendCheckinToVisitor(
            string hostName,
            string visitorEmailID,
            string date,
            string checkInCode,
            string link)
        {
            string strEmailMessage_scitv = null;
            try
            {
                TemplateParser htmlFile = new TemplateParser();
                string strSubjectLine = string.Empty;
                ////string strFromAddress = 
                ////    System.Configuration.ConfigurationManager.AppSettings[VMSConstants.VMSConstants.FromAddress].ToString();
                ////string strSMTPHostAddress = 
                ////    System.Configuration.ConfigurationManager.AppSettings[VMSConstants.VMSConstants.HostAdd].ToString();
                ////int isSMTPPort = 
                ////    Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings[VMSConstants.VMSConstants.Port]);
                string tokens = TokenForCheckInToVisitorMailTemplate;
                string values = string.Empty;
                string templateFileName = string.Empty;
                values = hostName + "|" + date + "|" + checkInCode + "|" + link;
                {
                    if (string.Compare(link, "false") != 0)
                    {
                        ////templateFileName = string.Concat(
                        ////    string.Empty,
                        ////    System.Configuration.ConfigurationManager.AppSettings["CheckInVisitor"].ToString());
                        templateFileName =
                            System.Configuration.ConfigurationManager.AppSettings["CheckInVisitor"].ToString();
                    }
                    else
                    {
                        ////templateFileName = string.Concat(
                        ////    string.Empty,
                        ////    System.Configuration.ConfigurationManager.AppSettings["CheckInVisitorWithoutLink"].ToString());
                        templateFileName =
                            System.Configuration.ConfigurationManager.AppSettings["CheckInVisitorWithoutLink"].ToString();
                    }

                    string body = htmlFile.GetParsedHtmlFile(templateFileName, tokens, values).ToString();
                    strSubjectLine = SendLinkbyMailSubjectLine;
                    strEmailMessage_scitv = strEmailMessage_scitv + body;

                    // Send mail 
                    SendEmailnew(strSubjectLine, strEmailMessage_scitv.ToString(), visitorEmailID);
                    ////VMSUtility.VMSUtility.SendEmail(
                    ////    visitorEmailID,
                    ////    strFromAddress,
                    ////    strSMTPHostAddress,
                    ////    isSMTPPort,
                    ////    strSubjectLine,
                    ////    strEmailMessage_scitv.ToString(),
                    ////    string.Empty);  
                }
            }
            catch (NullReferenceException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                ManageMailerDal obj = new ManageMailerDal();
                obj.LogBatchHistory(("Batch error SendCheckinToVisitor " + ex).Substring(0, 200), "NULL");
                throw ex;
            }
        }

        public static bool checkcontdates(System.Data.DataTable clientvisitdetails)
        {

            DateTime startdate = Convert.ToDateTime(clientvisitdetails.Rows[0]["Date"]);
            for (var k = 0; k < clientvisitdetails.Rows.Count; k++)
            {
                DateTime VisitDates = Convert.ToDateTime(clientvisitdetails.Rows[k]["Date"]);
                if ((VisitDates - startdate).Days != k)
                {

                    return false;
                }
            }
            return true;
        }
        /// <summary>
        /// Function to get checkin visitor details
        /// </summary>
        /// <returns></returns>
        public DataTable GetVisitorCheckinDeatilsforMailProcess()
        {
            try
            {
                ManageMailerDal obj = new ManageMailerDal();

                return obj.GetVisitorCheckinDeatilsforMailProcess();
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                throw ex;
            }
            catch (NullReferenceException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public DataTable GetVisitorCheckoutDeatilsforMailProcess()
        {
            try
            {
                ManageMailerDal obj = new ManageMailerDal();

                return obj.GetVisitorCheckoutDeatilsforMailProcess();
            }
            catch (System.Data.SqlClient.SqlException ex)
            {
                throw ex;
            }
            catch (NullReferenceException ex)
            {
                throw ex;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        /// <summary>
        /// Template Parser
        /// </summary>
        [SuppressMessage("StyleCop.CSharp.MaintainabilityRules", "SA1402:FileMayOnlyContainASingleClass", Justification = "its ok here")]
        [SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible", Justification = "its ok here")]
        public class TemplateParser
        {
            #region Public methods
            /// <summary>
            /// get the email message from the given template
            /// </summary>
            /// <param name="strTemplateFileName">Template FileName</param>
            /// <param name="strTokens">string Tokens</param>
            /// <param name="strValues">string Values</param>
            /// <returns>returns string</returns>
            public string GetParsedHtmlFile(string strTemplateFileName, string strTokens, string strValues)
            {
                try
                {
                    StringBuilder fileContents = new StringBuilder();
                    if (strTemplateFileName == "CheckInVisitor.htm")
                    {


                        fileContents = fileContents.Append("<!DOCTYPE html PUBLIC " + "'-//W3C//DTD XHTML 1.0 Transitional//EN'" + "'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'" + ">");
                        fileContents = fileContents.Append("<html xmlns=" + "'http://www.w3.org/1999/xhtml'" + ">");
                        fileContents = fileContents.Append("<head>");
                        fileContents = fileContents.Append("<meta http-equiv=" + "'Content-Type'" + " content=" + "'text/html; charset = utf-8'" + "/>");
                        fileContents = fileContents.Append("<title>Untitled Document</title>");
                        fileContents = fileContents.Append("<style type=" + "'text/css'" + ">");
                        fileContents = fileContents.Append("body");
                        fileContents = fileContents.Append("{");
                        fileContents = fileContents.Append("margin-left: 0px;");
                        fileContents = fileContents.Append("margin-top: 0px;");
                        fileContents = fileContents.Append("margin-right: 0px;");
                        fileContents = fileContents.Append("margin-bottom: 0px;");
                        fileContents = fileContents.Append("}");
                        fileContents = fileContents.Append("body, td, th");
                        fileContents = fileContents.Append("{");
                        fileContents = fileContents.Append("font-family:  Arial, Helvetica, sans-serif;");
                        fileContents = fileContents.Append("font-size: 12px;");
                        fileContents = fileContents.Append("color: #474747;");
                        fileContents = fileContents.Append("}");
                        fileContents = fileContents.Append("</style>");
                        fileContents = fileContents.Append("</head>");
                        fileContents = fileContents.Append("<body>");
                        fileContents = fileContents.Append("<table width=" + "487.5pt" + " border=" + "0" + " align=" + "center" + " cellpadding=" + "0" + " cellspacing=" + "1" + " bgcolor=" + "#929292" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100%" + " border=" + "0" + " align=" + "center" + " cellpadding=" + "0" + " cellspacing=" + "0" + " bgcolor=" + "#FFFFFF" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + "  border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "0" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td bgcolor=" + "#0033A0" + " height=" + "50pt" + " style=" + " text-align:center" + ">");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td style=" + "'BACKGROUND: #def2f6; PADDING-BOTTOM: 11.25pt; PADDING-TOP: 11.25pt; PADDING-LEFT: 15pt; PADDING-RIGHT: 15pt;vertical-align:top;'" + ">");
                        fileContents = fileContents.Append("<p>");
                        fileContents = fileContents.Append("Hi,");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<p style=" + "'MARGIN-LEFT: 22.5pt; font-size:10.5pt'" + ">");
                        fileContents = fileContents.Append("This mail has been sent to you from Cognizant Visitor Management System for meeting");
                        fileContents = fileContents.Append(" <b>tknAssociateName</b> at Cognizant premises.</p>");
                        fileContents = fileContents.Append("<p style=" + "'MARGIN-LEFT: 22.5pt; font-size:10.5pt'" + ">");
                        fileContents = fileContents.Append("The Express Check-in code for your visit details submitted on tknDateofsubmission ");
                        fileContents = fileContents.Append("is <b>tknCheckIn</b>.Please refer this");
                        fileContents = fileContents.Append(" code at the security desk for a speedy check in.");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<p style=" + "'padding: 0; margin: 0; font-size:10.5pt'" + ">Regards,</p>");
                        fileContents = fileContents.Append("<p style=" + "'padding: 0; margin: 0; font-size:10.5pt'" + ">Cognizant</p>");
                        fileContents = fileContents.Append("<p>");
                        fileContents = fileContents.Append("* This is an auto generated mail, please do not reply to this mail.");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td bgcolor=" + "black" + " height=" + "10px" + ">");
                        fileContents = fileContents.Append("&nbsp;</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");




                    }
                    else if (strTemplateFileName == "CheckInVisitorWithoutLink.htm")
                    {
                        //fileContents = fileContents.Append("<!DOCTYPE html PUBLIC " + "-//W3C//DTD XHTML 1.0 Transitional//EN" + "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" + "><html xmlns=" + "http://www.w3.org/1999/xhtml" + ">");
                        //fileContents = fileContents.Append("<head><meta http-equiv=" + "Content-Type" + "content=" + "text/html; charset=utf-8" + "/>");
                        //fileContents = fileContents.Append("<title>Untitled Document</title>");
                        //fileContents = fileContents.Append("<style type=" + "text/css" + ">body{margin-left: 0px;margin-top: 0px;margin-right: 0px;margin-bottom: 0px;}");
                        //fileContents = fileContents.Append("body, td, th{font-family: " + "Trebuchet MS" + " , Arial, Helvetica, sans-serif;font-size: 12px;color: #474747;}</style></head>");
                        //fileContents = fileContents.Append("<body><table width=" + "680" + " border=" + "0" + " align=" + " center" + " cellpadding=" + "0" + " cellspacing=" + "1" + " bgcolor=" + "#929292" + ">");
                        //fileContents = fileContents.Append("<tr><td><table width=" + "100%" + " border=" + "0" + " align=" + " center" + " cellpadding=" + "0" + " cellspacing=" + "0" + " bgcolor=" + "#FFFFFF" + ">");
                        //fileContents = fileContents.Append("<tr><td><table width=" + "100%" + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "0" + ">");
                        //fileContents = fileContents.Append("<tr><td bgcolor=" + "#3f8faf" + " height=" + "10px" + ">&nbsp;</td></tr>");
                        //fileContents = fileContents.Append("<tr><td bgcolor=" + "#7f7f7f" + " height=" + "10px" + ">&nbsp;</td></tr></table></td></tr>");
                        //fileContents = fileContents.Append("<tr><td><table width=" + "100%" + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + "><tr><td><p>Hi,</p>");
                        //fileContents = fileContents.Append("<p>This mail has been sent to you from Cognizant Visitor Management System for meeting tknAssociateName at Cognizant premises.</p>");
                        //fileContents = fileContents.Append("<p>The Express Check-in code for your visit details submitted on tknDateofsubmission is <b>tknCheckIn</b>.Please refer this code at the security desk for a speedy check in.</p>");
                        //////fileContents = fileContents.Append("<p>Please log into  <a style=" + "text-decoration:none" + " href=" + "tknlink" + ">Physical Security Application</a> and update your details for a smooth entry into the facility.</p>");
                        //fileContents = fileContents.Append("</td></tr></table></td></tr><tr><td><img src=cid:companylogo height=" + "60" + "/></td></tr>");
                        //fileContents = fileContents.Append("<tr><td><table width=" + "100%" + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + "><tr><td><p>");
                        //fileContents = fileContents.Append("<strong>Note</strong>: For any queries, kindly raise a <a href=" + "https://onecognizant.cognizant.com/?GlobalAppId=449" + "style=" + "text-decoration: none;" + ">GSD </a>with the following CTI- Category: 1C-App Store -> Type: Visitor Management System -> Item: (Depends on concern)");
                        //fileContents = fileContents.Append("</p> <p>* This is an auto generated mail, please do not reply to this mail.</p></td></tr></table></td></tr>");
                        //fileContents = fileContents.Append("<tr><td bgcolor=" + "#7f7f7f" + " height=" + "10px" + ">&nbsp;</td></tr>");
                        //fileContents = fileContents.Append("<tr><td bgcolor=" + "#3f8faf" + " height=" + "10px" + ">&nbsp;</td></tr></table></td></tr></table></body></html>");

                        fileContents = fileContents.Append("<!DOCTYPE html PUBLIC " + "'-//W3C//DTD XHTML 1.0 Transitional//EN'" + "'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'" + ">");
                        fileContents = fileContents.Append("<html xmlns=" + "'http://www.w3.org/1999/xhtml'" + ">");
                        fileContents = fileContents.Append("<head>");
                        fileContents = fileContents.Append("<meta http-equiv=" + "'Content-Type'" + " content=" + "'text/html; charset = utf-8'" + "/>");
                        fileContents = fileContents.Append("<title>Untitled Document</title>");
                        fileContents = fileContents.Append("<style type=" + "'text/css'" + ">");
                        fileContents = fileContents.Append("body");
                        fileContents = fileContents.Append("{");
                        fileContents = fileContents.Append("margin-left: 0px;");
                        fileContents = fileContents.Append("margin-top: 0px;");
                        fileContents = fileContents.Append("margin-right: 0px;");
                        fileContents = fileContents.Append("margin-bottom: 0px;");
                        fileContents = fileContents.Append("}");
                        fileContents = fileContents.Append("body, td, th");
                        fileContents = fileContents.Append("{");
                        fileContents = fileContents.Append("font-family:  Arial, Helvetica, sans-serif;");
                        fileContents = fileContents.Append("font-size: 12px;");
                        fileContents = fileContents.Append("color: #474747;");
                        fileContents = fileContents.Append("}");
                        fileContents = fileContents.Append("</style>");
                        fileContents = fileContents.Append("</head>");
                        fileContents = fileContents.Append("<body>");
                        fileContents = fileContents.Append("<table width=" + "487.5pt" + " border=" + "0" + " align=" + "center" + " cellpadding=" + "0" + " cellspacing=" + "1" + " bgcolor=" + "#929292" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100%" + " border=" + "0" + " align=" + "center" + " cellpadding=" + "0" + " cellspacing=" + "0" + " bgcolor=" + "#FFFFFF" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + "  border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "0" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td bgcolor=" + "#0033A0" + " height=" + "50pt" + " style=" + " text-align:center" + ">");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td style=" + "'BACKGROUND: #def2f6; PADDING-BOTTOM: 11.25pt; PADDING-TOP: 11.25pt; PADDING-LEFT: 15pt; PADDING-RIGHT: 15pt;vertical-align:top;'" + ">");
                        fileContents = fileContents.Append("<p>");
                        fileContents = fileContents.Append("Hi,");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<p style=" + "'MARGIN-LEFT: 22.5pt; font-size:10.5pt'" + ">");
                        fileContents = fileContents.Append("This mail has been sent to you from Cognizant Visitor Management System for meeting");
                        fileContents = fileContents.Append(" tknAssociateName at Cognizant premises.</p>");
                        fileContents = fileContents.Append("<p style=" + "'MARGIN-LEFT: 22.5pt; font-size:10.5pt'" + ">");
                        fileContents = fileContents.Append("The Express Check-in code for your visit details submitted on tknDateofsubmission ");
                        fileContents = fileContents.Append("is <b>tknCheckIn</b>.Please refer this");
                        fileContents = fileContents.Append(" code at the security desk for a speedy check in.");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<table width=" + "100% " + " border=" + "0" + " cellspacing=" + "0" + " cellpadding=" + "10" + ">");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td>");
                        fileContents = fileContents.Append("<p style=" + "'padding: 0; margin: 0; font-size:10.5pt'" + ">Regards,</p>");
                        fileContents = fileContents.Append("<p style=" + "'padding: 0; margin: 0; font-size:10.5pt'" + ">Cognizant</p>");
                        fileContents = fileContents.Append("<p>");
                        fileContents = fileContents.Append("* This is an auto generated mail, please do not reply to this mail.");
                        fileContents = fileContents.Append("</p>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("<tr>");
                        fileContents = fileContents.Append("<td bgcolor=" + "black" + " height=" + "10px" + ">");
                        fileContents = fileContents.Append("&nbsp;</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                        fileContents = fileContents.Append("</td>");
                        fileContents = fileContents.Append("</tr>");
                        fileContents = fileContents.Append("</table>");
                    }
                    //// Retrieve content of the Template HTML file
                    ////fileContents = fileContents.Append(this.GetContentOfTemplateFile(strTemplateFileName));
                    string[] tokens = strTokens.Split(Convert.ToChar("|"));
                    string[] values = strValues.Split(Convert.ToChar("|"));

                    // First retrieve the file, then replace the Tokens by their respective Values
                    // Iterate over the Token array retrieving the array boundaries with "GetLowerBound" and "GetUpperBound"
                    // Then replace each token with its respective value for each Token element in the array
                    for (int tokenCounter = tokens.GetLowerBound(0);
                        tokenCounter <= tokens.GetUpperBound(0); tokenCounter++)
                    {
                        fileContents = fileContents.Replace(tokens[tokenCounter], values[tokenCounter]);
                    }

                    // cast the contents of the StringBuilder class to a String
                    return fileContents.ToString();
                }
                catch (ArgumentException ex)
                {
                    throw ex;
                }
                catch (NullReferenceException ex)
                {
                    throw ex;
                }
                catch (Exception ex)
                {
                    ManageMailerDal obj = new ManageMailerDal();
                    obj.LogBatchHistory(("Batch error GetParsedHtmlFile " + ex).Substring(0, 200), "NULL");
                    throw ex;
                }
            }

            #endregion

            #region Private Methods
            /// <summary>
            /// get the content of the given template
            /// </summary>
            /// <param name="fileName">file Name</param>
            /// <returns>returns string</returns>
            private string GetContentOfTemplateFile(string fileName)
            {
                try
                {
                    // Retrieve the content of the HTML file using a StreamReader class
                    StreamReader streamReaderHtmlFile;
                    string contentOfFile;
                    string filePath = System.IO.Path.GetFullPath(fileName);
                    streamReaderHtmlFile = File.OpenText(filePath);
                    contentOfFile = streamReaderHtmlFile.ReadToEnd();
                    streamReaderHtmlFile.Close();
                    return contentOfFile;
                }
                catch (FileNotFoundException ex)
                {
                    throw ex;
                }
                catch (ArgumentException ex)
                {
                    throw ex;
                }
                catch (Exception ex)
                {
                    ManageMailerDal obj = new ManageMailerDal();
                    obj.LogBatchHistory(("Batch error GetContentOfTemplateFile " + ex).Substring(0, 200), "NULL");
                    throw ex;
                }
            }
            #endregion
        }
    }
}
